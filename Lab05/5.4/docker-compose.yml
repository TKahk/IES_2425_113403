version: '3.8'

# Project Name
name: lab05

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.2
    depends_on:
      - kafka
    ports:
      - "9009:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"

  h2db:
    image: oscarfonts/h2
    container_name: h2db
    ports:
      - "1521:1521"
      - "81:81"
    volumes:
      - ./h2-data:/opt/h2-data
    environment:
      H2_OPTIONS: '-tcpAllowOthers -tcpPort 1521 -ifNotExists'

  backend:
    build:
      context: ./Movies
      dockerfile: dockerfile
    container_name: movies-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:h2:tcp://h2db:1521/opt/h2-data/testdb
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - h2db

  frontend:
    build:
      context: ./ReactInterface
      dockerfile: dockerfile
    container_name: movies-frontend
    ports:
      - "5173:5173" # Frontend UI access
    depends_on:
      - backend

  producer:
    build:
      context: ./poetry-demo
      dockerfile: dockerfile
    container_name: python-producer
    environment:
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      - kafka
